version: '3'
services:

  post-api:
    container_name: "post-api"
    image: ghcr.io/manumasjoan/post-service:master
    ports:
      - '8082:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: post-db
      DB_HOST: post
      DB_PORT: 5423
      KEYCLOAK_HOST: reverse-proxy
      KEYCLOAK_PORT: 80

  post-db:
    image: postgres:12.9
    restart: always
    ports:
      - '5423:5423'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=post-db
    volumes:
      - pgdata:/var/lib/postgresql/data


  follow-api:
    container_name: "follow-api"
    image: ghcr.io/tefiporacchia/followservice:master
    ports:
      - '8081:8080'
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: follow-db
      DB_HOST: postgres_db
      DB_PORT: 5423
      KEYCLOAK_HOST: reverse-proxy
      KEYCLOAK_PORT: 80

  follow-db:
    image: postgres:12.9
    restart: always
    ports:
      - '5424:5423'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=follow-db
    volumes:
      - pgdata:/var/lib/postgresql/data


  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_DATABASE: keycloak-db
      DB_PORT: 5432
      DB_ADDR: keycloak-postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_VENDOR: postgres
      PROXY_ADDRESS_FORWARDING: true

    ports:
      - '8080:8080'
    depends_on:
      - keycloak-postgres

  keycloak-postgres:
    container_name: "keycloak-postgres"
    image: postgres:12.9
    restart: always
    expose:
      - 5432
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=password
        - POSTGRES_DB=keycloak-db
    volumes:
      - keycloak_data:/var/lib/postgresql/data

  reverse-proxy:
    image: ghcr.io/tefiporacchia/jibberjabberui:prod
    container_name: reverse-proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./certbot/www:/var/www/certbot/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  datadog:
    image: datadog/agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_APM_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro

volumes:
  pgdata:
    external: false
  keycloak_data:
    external: false